[{"G:\\sbip\\etherscanmock\\src\\index.js":"1","G:\\sbip\\etherscanmock\\src\\App.js":"2","G:\\sbip\\etherscanmock\\src\\reportWebVitals.js":"3","G:\\sbip\\etherscanmock\\src\\pages\\LandingPage\\LandingPage.Container.jsx":"4","G:\\sbip\\etherscanmock\\src\\components\\header\\header.jsx":"5","G:\\sbip\\etherscanmock\\src\\store\\store.js":"6","G:\\sbip\\etherscanmock\\src\\components\\search\\search.jsx":"7","G:\\sbip\\etherscanmock\\src\\components\\overview\\overview.jsx":"8","G:\\sbip\\etherscanmock\\src\\store\\saga.js":"9","G:\\sbip\\etherscanmock\\src\\store\\reducer.js":"10","G:\\sbip\\etherscanmock\\src\\store\\BlockStore\\block.reducer.js":"11","G:\\sbip\\etherscanmock\\src\\store\\BlockStore\\block.saga.js":"12","G:\\sbip\\etherscanmock\\src\\store\\BlockStore\\block.action.js":"13","G:\\sbip\\etherscanmock\\src\\store\\BlockStore\\block.api.js":"14","G:\\sbip\\etherscanmock\\src\\helpers\\httpHelper.js":"15","G:\\sbip\\etherscanmock\\src\\components\\details\\details.jsx":"16","G:\\sbip\\etherscanmock\\src\\helpers\\utility.js":"17","G:\\sbip\\etherscanmock\\src\\components\\charts\\charts.jsx":"18"},{"size":500,"mtime":499162500000,"results":"19","hashOfConfig":"20"},{"size":469,"mtime":1611083470226,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":2832,"mtime":1611580388571,"results":"23","hashOfConfig":"20"},{"size":1351,"mtime":1611254981652,"results":"24","hashOfConfig":"20"},{"size":976,"mtime":1611262057790,"results":"25","hashOfConfig":"20"},{"size":1883,"mtime":1611385936894,"results":"26","hashOfConfig":"20"},{"size":3963,"mtime":1611639890400,"results":"27","hashOfConfig":"20"},{"size":203,"mtime":1611260467159,"results":"28","hashOfConfig":"20"},{"size":350,"mtime":1611261828003,"results":"29","hashOfConfig":"20"},{"size":2333,"mtime":1611563103105,"results":"30","hashOfConfig":"20"},{"size":1291,"mtime":1611563041978,"results":"31","hashOfConfig":"20"},{"size":825,"mtime":1611558450057,"results":"32","hashOfConfig":"20"},{"size":702,"mtime":1611558295545,"results":"33","hashOfConfig":"20"},{"size":1346,"mtime":1611262270487,"results":"34","hashOfConfig":"20"},{"size":2507,"mtime":1611563948186,"results":"35","hashOfConfig":"20"},{"size":1580,"mtime":1611400814782,"results":"36","hashOfConfig":"20"},{"size":765,"mtime":1611580150017,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"sr5oml",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"G:\\sbip\\etherscanmock\\src\\index.js",[],["80","81"],"G:\\sbip\\etherscanmock\\src\\App.js",[],"G:\\sbip\\etherscanmock\\src\\reportWebVitals.js",[],"G:\\sbip\\etherscanmock\\src\\pages\\LandingPage\\LandingPage.Container.jsx",[],"G:\\sbip\\etherscanmock\\src\\components\\header\\header.jsx",[],"G:\\sbip\\etherscanmock\\src\\store\\store.js",[],"G:\\sbip\\etherscanmock\\src\\components\\search\\search.jsx",[],"G:\\sbip\\etherscanmock\\src\\components\\overview\\overview.jsx",[],"G:\\sbip\\etherscanmock\\src\\store\\saga.js",[],"G:\\sbip\\etherscanmock\\src\\store\\reducer.js",["82"],"import { AnyAction, combineReducers } from 'redux';\r\nimport BlockReducer from '../store/BlockStore/block.reducer'\r\n\r\n\r\nconst appReducer = combineReducers({\r\n    blockReducer: BlockReducer\r\n});\r\n\r\nconst rootReducer = (state, action) => {\r\n    let updatedState = state;\r\n    return appReducer(updatedState, action);\r\n};\r\n\r\nexport default rootReducer;  ","G:\\sbip\\etherscanmock\\src\\store\\BlockStore\\block.reducer.js",["83"],"import { action } from \"typesafe-actions\";\r\nimport { convertToStandardBlock, convertToStandardTxn } from '../../helpers/utility';\r\n\r\nexport const initialState = {\r\n    block: {\r\n        difficulty: '',\r\n        extraData: '',\r\n        gasLimit: '',\r\n        gasUsed: '',\r\n        hash: '',\r\n        miner: '',\r\n        mixHash: '',\r\n        nonce: '',\r\n        number: '',\r\n        parentHash: '',\r\n        receiptsRoot: '',\r\n        sha3Uncles: '',\r\n        size: '',\r\n        stateRoot: '',\r\n        timestamp: '',\r\n        totalDifficulty: '',\r\n        transactions: []\r\n    },\r\n    transaction: {\r\n        blockHash: '',\r\n        blockNumber: '',\r\n        from: '',\r\n        gas: '',\r\n        gasPrice: '',\r\n        hash: '',\r\n        input: '',\r\n        nonce: '',\r\n        r: '',\r\n        s: '',\r\n        to: '',\r\n        transactionIndex: '',\r\n        v: '',\r\n        value: ''\r\n    },\r\n    logs: [{\r\n        address: '',\r\n        blockHash: '',\r\n        blockNumber: '',\r\n        data: '',\r\n        logIndex: '',\r\n        removed: false,\r\n        topics: [],\r\n        transactionHash: '',\r\n        transactionIndex: ''\r\n    }]\r\n}\r\n\r\nconst BlockReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"block/BLOCK_TNX_BY_HASH_SUCCESS\": {\r\n            return Object.assign({}, state, {\r\n                block: action.payload === undefined ? null : convertToStandardBlock(action.payload),\r\n                transaction: null\r\n            })\r\n        }\r\n\r\n        case \"block/TNX_BY_HASH_SUCCESS\": {\r\n            return Object.assign({}, state, {\r\n                transaction: action.payload === undefined ? null : convertToStandardTxn(action.payload),\r\n                block: null\r\n            })\r\n        }\r\n\r\n        case \"block/LOG_SUCCESS\": {\r\n            return Object.assign({}, state, {\r\n                logs: action.payload === undefined ? null : action.payload.splice(0, 10),\r\n            })\r\n        }\r\n\r\n        case \"block/LOG_ERROR\":\r\n        case \"block/TNX_BY_HASH_ERROR\":\r\n        case \"block/BLOCK_TNX_BY_HASH_ERROR\": {\r\n            return Object.assign({}, state, {\r\n                transaction: state.transaction,\r\n                block: state.block\r\n            })\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport default BlockReducer;","G:\\sbip\\etherscanmock\\src\\store\\BlockStore\\block.saga.js",["84"],"import { AnyAction } from 'redux';\r\nimport { call, put, takeEvery } from 'redux-saga/effects';\r\nimport BlockAPI from './block.api';\r\nimport  { getBlockbyhashSuccess, getBlockbyhashError, getTxnbyhashSuccess, getTxnbyhashError, getLogSuccess, getLogError } from './block.action';\r\n\r\nexport function* handleGetBlockByhash(action) {\r\n    try {\r\n        const block = yield call(BlockAPI.GetBlockByHash, action.payload);\r\n        yield put(getBlockbyhashSuccess(block.result));\r\n    } catch(e) {\r\n        yield put(getBlockbyhashError(e));\r\n    }\r\n\r\n}\r\n\r\nexport function* handleGetTxnByhash(action) {\r\n    try {\r\n        const txn = yield call(BlockAPI.GetTxnByHash, action.payload);\r\n        yield put(getTxnbyhashSuccess(txn.result));\r\n    } catch(e) {\r\n        yield put(getTxnbyhashError(e));\r\n    }\r\n\r\n}\r\n\r\nexport function* handleGetLogs(action) {\r\n    try {\r\n        const logs = yield call(BlockAPI.GetLogs, action.payload);\r\n        yield put(getLogSuccess(logs.result));\r\n    } catch(e) {\r\n        yield put(getLogError(e));\r\n    }\r\n\r\n}\r\n\r\nexport function* BlockSaga() {\r\n\r\n    yield takeEvery(\"block/BLOCK_TNX_BY_HASH_REQUEST\", handleGetBlockByhash)\r\n    yield takeEvery(\"block/TNX_BY_HASH_REQUEST\", handleGetTxnByhash)\r\n    yield takeEvery(\"block/LOG_REQUEST\", handleGetLogs)\r\n    \r\n}","G:\\sbip\\etherscanmock\\src\\store\\BlockStore\\block.action.js",[],"G:\\sbip\\etherscanmock\\src\\store\\BlockStore\\block.api.js",[],"G:\\sbip\\etherscanmock\\src\\helpers\\httpHelper.js",["85"],"import axios from 'axios';\r\nimport * as rax from 'retry-axios';\r\nimport { store } from '../store/store';\r\n\r\nexport default class HttpHelper {\r\n    static httpRequest = async (\r\n        url,\r\n        methodType,\r\n        orgHeaders,\r\n        body = {}\r\n    ) => {\r\n        let headers = orgHeaders;\r\n\r\n        let config = {\r\n            method: methodType,\r\n            url: url,\r\n            headers: headers,\r\n            data: body,\r\n            raxConfig: {\r\n                retry: 3,\r\n                noResponseRetries: 2,\r\n                retryDelay: 100,\r\n                httpMethodsToRetry: ['GET', 'HEAD', 'OPTIONS', 'DELETE', 'PUT'],\r\n                statusCodesToRetry: [[100, 199], [429, 429], [500, 599]]\r\n            }\r\n        };\r\n\r\n        return await axios(config)\r\n            .then(function (response) {\r\n                return HttpHelper.successHandler(response);\r\n            })\r\n            .catch(function (error) {\r\n                HttpHelper.errorHandler(error);\r\n            });\r\n    }\r\n\r\n    static successHandler = (response) => {\r\n        if (response.status > 199 && response.status < 205) {\r\n            return response.data;\r\n        }\r\n    }\r\n\r\n    static errorHandler = (error) => {\r\n        console.log(error.response)\r\n    }\r\n\r\n    static httpRequestRetry = async () => {\r\n        rax.attach(axios);\r\n    }\r\n}","G:\\sbip\\etherscanmock\\src\\components\\details\\details.jsx",["86"],"import React, { Component } from \"react\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Table from 'react-bootstrap/Table';\r\nimport './details.css';\r\n\r\nclass Details extends Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            show: false,\r\n        }\r\n        this.closeModal = this.closeModal.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if ((this.props.block !== prevProps.block) || (this.props.block !== prevProps.block)\r\n\r\n        ) {\r\n            this.setState({ show: true });\r\n        }\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ show: false });\r\n    }\r\n\r\n    render() {\r\n        let temp = <span />\r\n        temp = this.props.block && this.props.block !== undefined && Object.entries(this.props.block).map((item) => {\r\n            switch (item[0]) {\r\n                case \"logsbloom\":\r\n                    break;\r\n                case \"input\":\r\n                    break;\r\n                case \"r\":\r\n                    break;\r\n                case \"s\":\r\n                    break;\r\n                case \"v\":\r\n                    break;\r\n                case \"extraData\":\r\n                    break;\r\n                case \"transactions\":\r\n                    console.log(item[0])\r\n                    return (<tr><td>{item[0].toUpperCase()}</td><td>{item[1].length} number of Transactions</td></tr>)\r\n                default:\r\n                    return (<tr><td>{item[0].toUpperCase()}</td><td>{(item[1])}</td></tr>)\r\n            }\r\n        })\r\n        return (\r\n            <div>\r\n                <Modal\r\n                    show={this.state.show}\r\n                    onHide={() => { this.closeModal() }}\r\n                    dialogClassName=\"modal-90w\"\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"detail-title\">\r\n                            Overview - {this.props.block && this.props.block !== undefined && this.props.block.difficulty  ? 'Block By Hash' : 'Transaction By Hash'}\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Table responsive=\"sm\" striped={true} borderless={true}>\r\n                            <tbody>\r\n                                {temp}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Details;\r\n","G:\\sbip\\etherscanmock\\src\\helpers\\utility.js",[],"G:\\sbip\\etherscanmock\\src\\components\\charts\\charts.jsx",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":1,"column":10,"nodeType":"93","messageId":"94","endLine":1,"endColumn":19},{"ruleId":"91","severity":1,"message":"95","line":1,"column":10,"nodeType":"93","messageId":"94","endLine":1,"endColumn":16},{"ruleId":"91","severity":1,"message":"92","line":1,"column":10,"nodeType":"93","messageId":"94","endLine":1,"endColumn":19},{"ruleId":"91","severity":1,"message":"96","line":3,"column":10,"nodeType":"93","messageId":"94","endLine":3,"endColumn":15},{"ruleId":"97","severity":1,"message":"98","line":29,"column":114,"nodeType":"99","messageId":"100","endLine":29,"endColumn":116},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'AnyAction' is defined but never used.","Identifier","unusedVar","'action' is defined but never used.","'store' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]